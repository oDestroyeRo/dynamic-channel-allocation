import matplotlib.pyplot as plt
import pandas as pd
from scipy.ndimage.filters import gaussian_filter1d


datas_s1 = pd.read_csv('results/PPO/result_sin_1.csv', names=["reward", "blockprob", "total_blockprob", "drop_rate", "Date"])
datas_s2 = pd.read_csv('results/PPO/result_sin_2.csv', names=["reward", "blockprob", "total_blockprob", "drop_rate", "Date"])
datas_s3 = pd.read_csv('results/PPO/result_sin_3.csv', names=["reward", "blockprob", "total_blockprob", "drop_rate", "Date"])
datas_s4 = pd.read_csv('results/PPO/result_sin_4.csv', names=["reward", "blockprob", "total_blockprob", "drop_rate", "Date"])
datas_s5 = pd.read_csv('results/PPO/result_sin_5.csv', names=["reward", "blockprob", "total_blockprob", "drop_rate", "Date"])
datas_s6 = pd.read_csv('results/PPO/result_sin_6.csv', names=["reward", "blockprob", "total_blockprob", "drop_rate", "Date"])
datas_s7 = pd.read_csv('results/PPO/result_sin_7.csv', names=["reward", "blockprob", "total_blockprob", "drop_rate", "Date"])
datas_s8 = pd.read_csv('results/PPO/result_sin_8.csv', names=["reward", "blockprob", "total_blockprob", "drop_rate", "Date"])
datas_s9 = pd.read_csv('results/PPO/result_sin_9.csv', names=["reward", "blockprob", "total_blockprob", "drop_rate", "Date"])
datas_s10 = pd.read_csv('results/PPO/result_sin_10.csv', names=["reward", "blockprob", "total_blockprob", "drop_rate", "Date"])
datas_s11 = pd.read_csv('results/PPO/result_sin_11.csv', names=["reward", "blockprob", "total_blockprob", "drop_rate", "Date"])
datas_s12 = pd.read_csv('results/PPO/result_sin_12.csv', names=["reward", "blockprob", "total_blockprob", "drop_rate", "Date"])
datas_s13 = pd.read_csv('results/PPO/result_sin_13.csv', names=["reward", "blockprob", "total_blockprob", "drop_rate", "Date"])
datas_s14  = pd.read_csv('results/PPO/result_sin_14.csv', names=["reward", "blockprob", "total_blockprob", "drop_rate", "Date"])
datas_s15 = pd.read_csv('results/PPO/result_sin_15.csv', names=["reward", "blockprob", "total_blockprob", "drop_rate", "Date"])
datas_s16 = pd.read_csv('results/PPO/result_sin_16.csv', names=["reward", "blockprob", "total_blockprob", "drop_rate", "Date"])

datas_s1 = datas_s1.drop(datas_s1.index[1000:])
datas_s2 = datas_s2.drop(datas_s2.index[1000:])
datas_s3 = datas_s3.drop(datas_s3.index[1000:])
datas_s4 = datas_s4.drop(datas_s4.index[1000:])
datas_s5 = datas_s5.drop(datas_s5.index[1000:])
datas_s6 = datas_s6.drop(datas_s6.index[1000:])
datas_s7 = datas_s7.drop(datas_s7.index[1000:])
datas_s8 = datas_s8.drop(datas_s8.index[1000:])
datas_s9 = datas_s9.drop(datas_s9.index[1000:])
datas_s10 = datas_s10.drop(datas_s10.index[1000:])
datas_s11 = datas_s11.drop(datas_s11.index[1000:])
datas_s12 = datas_s12.drop(datas_s12.index[1000:])
datas_s13 = datas_s13.drop(datas_s13.index[600:])
datas_s14 = datas_s14.drop(datas_s14.index[600:])
datas_s15 = datas_s15.drop(datas_s15.index[600:])
datas_s16 = datas_s16.drop(datas_s16.index[600:])

datas_s1["Date"] = datas_s1["Date"].str.extract(pat = '([A-Z][a-z][a-z] [A-Z][a-z][a-z]  [0-9])') 
datas_s2["Date"] = datas_s2["Date"].str.extract(pat = '([A-Z][a-z][a-z] [A-Z][a-z][a-z]  [0-9])') 
datas_s3["Date"] = datas_s3["Date"].str.extract(pat = '([A-Z][a-z][a-z] [A-Z][a-z][a-z]  [0-9])') 
datas_s4["Date"] = datas_s4["Date"].str.extract(pat = '([A-Z][a-z][a-z] [A-Z][a-z][a-z]  [0-9])') 
datas_s5["Date"] = datas_s5["Date"].str.extract(pat = '([A-Z][a-z][a-z] [A-Z][a-z][a-z]  [0-9])') 
datas_s6["Date"] = datas_s6["Date"].str.extract(pat = '([A-Z][a-z][a-z] [A-Z][a-z][a-z]  [0-9])') 
datas_s7["Date"] = datas_s7["Date"].str.extract(pat = '([A-Z][a-z][a-z] [A-Z][a-z][a-z]  [0-9])') 
datas_s8["Date"] = datas_s8["Date"].str.extract(pat = '([A-Z][a-z][a-z] [A-Z][a-z][a-z]  [0-9])') 
datas_s9["Date"] = datas_s9["Date"].str.extract(pat = '([A-Z][a-z][a-z] [A-Z][a-z][a-z]  [0-9])') 
datas_s10["Date"] = datas_s10["Date"].str.extract(pat = '([A-Z][a-z][a-z] [A-Z][a-z][a-z]  [0-9])') 
datas_s11["Date"] = datas_s11["Date"].str.extract(pat = '([A-Z][a-z][a-z] [A-Z][a-z][a-z]  [0-9])') 
datas_s12["Date"] = datas_s12["Date"].str.extract(pat = '([A-Z][a-z][a-z] [A-Z][a-z][a-z]  [0-9])') 
datas_s13["Date"] = datas_s13["Date"].str.extract(pat = '([A-Z][a-z][a-z] [A-Z][a-z][a-z]  [0-9])') 
datas_s14["Date"] = datas_s14["Date"].str.extract(pat = '([A-Z][a-z][a-z] [A-Z][a-z][a-z]  [0-9])') 
datas_s15["Date"] = datas_s15["Date"].str.extract(pat = '([A-Z][a-z][a-z] [A-Z][a-z][a-z]  [0-9])') 
datas_s16["Date"] = datas_s16["Date"].str.extract(pat = '([A-Z][a-z][a-z] [A-Z][a-z][a-z]  [0-9])') 


ax = plt.gca()
ax.set(xlabel='Date', ylabel='Block Probability',
       title='Compare Block Probability')
datas_s1['blockprob'] = gaussian_filter1d(datas_s1['blockprob'], sigma=4)
datas_s1.plot(kind='line',y='blockprob',x='Date',ax=ax, label="s1", marker="o", linestyle='--', markevery=50)
datas_s2['blockprob'] = gaussian_filter1d(datas_s2['blockprob'], sigma=4)
datas_s2.plot(kind='line',y='blockprob',x='Date',ax=ax, label="s2", marker="p", markevery=50)
datas_s3['blockprob'] = gaussian_filter1d(datas_s3['blockprob'], sigma=4)
datas_s3.plot(kind='line',y='blockprob',x='Date',ax=ax, label="s3", marker="s", linestyle='--', markevery=50)
datas_s4['blockprob'] = gaussian_filter1d(datas_s4['blockprob'], sigma=4)
datas_s4.plot(kind='line',y='blockprob',x='Date',ax=ax, label="s4", marker="x", linestyle='dotted', markevery=50)
datas_s5['blockprob'] = gaussian_filter1d(datas_s5['blockprob'], sigma=4)
datas_s5.plot(kind='line',y='blockprob',x='Date',ax=ax, label="s5", marker="o", linestyle='--', markevery=50)
datas_s6['blockprob'] = gaussian_filter1d(datas_s6['blockprob'], sigma=4)
datas_s6.plot(kind='line',y='blockprob',x='Date',ax=ax, label="s6", marker="p", markevery=50)
datas_s7['blockprob'] = gaussian_filter1d(datas_s7['blockprob'], sigma=4)
datas_s7.plot(kind='line',y='blockprob',x='Date',ax=ax, label="s7", marker="s", linestyle='--', markevery=50)
datas_s8['blockprob'] = gaussian_filter1d(datas_s8['blockprob'], sigma=4)
datas_s8.plot(kind='line',y='blockprob',x='Date',ax=ax, label="s8", marker="x", linestyle='dotted', markevery=50)
datas_s9['blockprob'] = gaussian_filter1d(datas_s9['blockprob'], sigma=4)
datas_s9.plot(kind='line',y='blockprob',x='Date',ax=ax, label="s9", marker="o", linestyle='--', markevery=50)
datas_s10['blockprob'] = gaussian_filter1d(datas_s10['blockprob'], sigma=4)
datas_s10.plot(kind='line',y='blockprob',x='Date',ax=ax, label="s10", marker="p", markevery=50)
datas_s11['blockprob'] = gaussian_filter1d(datas_s11['blockprob'], sigma=4)
datas_s11.plot(kind='line',y='blockprob',x='Date',ax=ax, label="s11", marker="s", linestyle='--', markevery=50)
datas_s12['blockprob'] = gaussian_filter1d(datas_s12['blockprob'], sigma=4)
datas_s12.plot(kind='line',y='blockprob',x='Date',ax=ax, label="s12", marker="x", linestyle='dotted', markevery=50)
datas_s13['blockprob'] = gaussian_filter1d(datas_s13['blockprob'], sigma=4)
datas_s13.plot(kind='line',y='blockprob',x='Date',ax=ax, label="s13", marker="o", linestyle='--', markevery=50)
datas_s14['blockprob'] = gaussian_filter1d(datas_s14['blockprob'], sigma=4)
datas_s14.plot(kind='line',y='blockprob',x='Date',ax=ax, label="s14", marker="p", markevery=50)
datas_s15['blockprob'] = gaussian_filter1d(datas_s15['blockprob'], sigma=4)
datas_s15.plot(kind='line',y='blockprob',x='Date',ax=ax, label="s15", marker="s", linestyle='--', markevery=50)
datas_s16['blockprob'] = gaussian_filter1d(datas_s16['blockprob'], sigma=4)
datas_s16.plot(kind='line',y='blockprob',x='Date',ax=ax, label="s16", marker="x", linestyle='dotted', markevery=50)

ax.legend()
plt.savefig("results/blockprob_senario_2.png")


ax = plt.gca()
ax.set(xlabel='Date', ylabel='Drop rate',
       title='Compare Drop rate')
datas_s1['drop_rate'] = gaussian_filter1d(datas_s1['drop_rate'], sigma=4)
datas_s1.plot(kind='line',y='drop_rate',x='Date',ax=ax, label="s1", marker="o", linestyle='--', markevery=50)
datas_s2['drop_rate'] = gaussian_filter1d(datas_s2['drop_rate'], sigma=4)
datas_s2.plot(kind='line',y='drop_rate',x='Date',ax=ax, label="s2", marker="p", markevery=50)
datas_s3['drop_rate'] = gaussian_filter1d(datas_s3['drop_rate'], sigma=4)
datas_s3.plot(kind='line',y='drop_rate',x='Date',ax=ax, label="s3", marker="s", linestyle='--', markevery=50)
datas_s4['drop_rate'] = gaussian_filter1d(datas_s4['drop_rate'], sigma=4)
datas_s4.plot(kind='line',y='drop_rate',x='Date',ax=ax, label="s4", marker="x", linestyle='dotted', markevery=50)
datas_s5['drop_rate'] = gaussian_filter1d(datas_s5['drop_rate'], sigma=4)
datas_s5.plot(kind='line',y='drop_rate',x='Date',ax=ax, label="s5", marker="o", linestyle='--', markevery=50)
datas_s6['drop_rate'] = gaussian_filter1d(datas_s6['drop_rate'], sigma=4)
datas_s6.plot(kind='line',y='drop_rate',x='Date',ax=ax, label="s6", marker="p", markevery=50)
datas_s7['drop_rate'] = gaussian_filter1d(datas_s7['drop_rate'], sigma=4)
datas_s7.plot(kind='line',y='drop_rate',x='Date',ax=ax, label="s7", marker="s", linestyle='--', markevery=50)
datas_s8['drop_rate'] = gaussian_filter1d(datas_s8['drop_rate'], sigma=4)
datas_s8.plot(kind='line',y='drop_rate',x='Date',ax=ax, label="s8", marker="x", linestyle='dotted', markevery=50)
datas_s9['drop_rate'] = gaussian_filter1d(datas_s9['drop_rate'], sigma=4)
datas_s9.plot(kind='line',y='drop_rate',x='Date',ax=ax, label="s9", marker="o", linestyle='--', markevery=50)
datas_s10['drop_rate'] = gaussian_filter1d(datas_s10['drop_rate'], sigma=4)
datas_s10.plot(kind='line',y='drop_rate',x='Date',ax=ax, label="s10", marker="p", markevery=50)
datas_s11['drop_rate'] = gaussian_filter1d(datas_s11['drop_rate'], sigma=4)
datas_s11.plot(kind='line',y='drop_rate',x='Date',ax=ax, label="s11", marker="s", linestyle='--', markevery=50)
datas_s12['drop_rate'] = gaussian_filter1d(datas_s12['drop_rate'], sigma=4)
datas_s12.plot(kind='line',y='drop_rate',x='Date',ax=ax, label="s12", marker="x", linestyle='dotted', markevery=50)
datas_s13['drop_rate'] = gaussian_filter1d(datas_s13['drop_rate'], sigma=4)
datas_s13.plot(kind='line',y='drop_rate',x='Date',ax=ax, label="s13", marker="o", linestyle='--', markevery=50)
datas_s14['drop_rate'] = gaussian_filter1d(datas_s14['drop_rate'], sigma=4)
datas_s14.plot(kind='line',y='drop_rate',x='Date',ax=ax, label="s14", marker="p", markevery=50)
datas_s15['drop_rate'] = gaussian_filter1d(datas_s15['drop_rate'], sigma=4)
datas_s15.plot(kind='line',y='drop_rate',x='Date',ax=ax, label="s15", marker="s", linestyle='--', markevery=50)
datas_s16['drop_rate'] = gaussian_filter1d(datas_s16['drop_rate'], sigma=4)
datas_s16.plot(kind='line',y='drop_rate',x='Date',ax=ax, label="s16", marker="x", linestyle='dotted', markevery=50)
ax.legend()
plt.savefig("results/droprate_senario_2.png")



print("Model block")
print(datas_s1['blockprob'].mean())
print(datas_s2['blockprob'].mean())
print(datas_s3['blockprob'].mean())
print(datas_s4['blockprob'].mean())
print(datas_s5['blockprob'].mean())
print(datas_s6['blockprob'].mean())
print(datas_s7['blockprob'].mean())
print(datas_s8['blockprob'].mean())
print(datas_s9['blockprob'].mean())
print(datas_s10['blockprob'].mean())
print(datas_s11['blockprob'].mean())
print(datas_s12['blockprob'].mean())
# print(datas_s13['blockprob'].mean())
# print(datas_s14['blockprob'].mean())
# print(datas_s15['blockprob'].mean())
# print(datas_s16['blockprob'].mean())

print("Total block")
print(datas_s1['total_blockprob'].mean())
print(datas_s2['total_blockprob'].mean())
print(datas_s3['total_blockprob'].mean())
print(datas_s4['total_blockprob'].mean())
print(datas_s5['total_blockprob'].mean())
print(datas_s6['total_blockprob'].mean())
print(datas_s7['total_blockprob'].mean())
print(datas_s8['total_blockprob'].mean())
print(datas_s9['total_blockprob'].mean())
print(datas_s10['total_blockprob'].mean())
print(datas_s11['total_blockprob'].mean())
print(datas_s12['total_blockprob'].mean())
# print(datas_s13['total_blockprob'].mean())
# print(datas_s14['total_blockprob'].mean())
# print(datas_s15['total_blockprob'].mean())
# print(datas_s16['total_blockprob'].mean())

print("Drop rate")
print(datas_s1['drop_rate'].mean())
print(datas_s2['drop_rate'].mean())
print(datas_s3['drop_rate'].mean())
print(datas_s4['drop_rate'].mean())
print(datas_s5['drop_rate'].mean())
print(datas_s6['drop_rate'].mean())
print(datas_s7['drop_rate'].mean())
print(datas_s8['drop_rate'].mean())
print(datas_s9['drop_rate'].mean())
print(datas_s10['drop_rate'].mean())
print(datas_s11['drop_rate'].mean())
print(datas_s12['drop_rate'].mean())
# print(datas_s13['drop_rate'].mean())
# print(datas_s14['drop_rate'].mean())
# print(datas_s15['drop_rate'].mean())
# print(datas_s16['drop_rate'].mean())